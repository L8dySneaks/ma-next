{"ast":null,"code":"var _jsxFileName = \"/Users/steph/Projects/07_prismic/ma-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import News from \"../components/News\";\n// import Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { getSortedPostsData } from '../lib/posts';\nimport Date from '../components/date';\nexport default function Home({\n  allPostsData\n}) {\n  return __jsx(Layout, {\n    home: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, siteTitle)), __jsx(\"section\", {\n    className: utilStyles.headingMd,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"Hello there, this is a sample site\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, \"(This is a sample website - you\\u2019ll be building a site like this on\", ' ', __jsx(\"a\", {\n    href: \"https://nextjs.org/learn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"our Next.js tutorial\"), \".)\")), __jsx(\"section\", {\n    className: `${utilStyles.headingMd} ${utilStyles.padding1px}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, allPostsData.map(({\n    id,\n    date,\n    title\n  }) => __jsx(\"li\", {\n    className: utilStyles.listItem,\n    key: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/projects/[id]\",\n    as: `/projects/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, title)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), __jsx(\"small\", {\n    className: utilStyles.lightText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, __jsx(Date, {\n    dateString: date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  })))))));\n}\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData();\n  return {\n    props: {\n      allPostsData\n    }\n  };\n} // if you need to get data on every request\n// export async function getServerSideProps(context) {\n//   return {\n//     props: {\n//       // props for your component\n//     }\n//   }\n// }\n// Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n// const Index = props => (\n//   <Layout>\n//     <h1>Top Notices</h1>\n//     <div>\n//       <News news={props.news} />\n//     </div>\n//     <style jsx>\n//       {`\n//         h1 {\n//           text-decoration: underline;\n//         }\n//       `}\n//     </style>\n//   </Layout>\n// );\n// Index.getInitialProps = async function(context) {\n//   let api = await Prismic.api(PrismicConfig.apiEndpoint);\n//   let response = await api.query(\n//     Prismic.Predicates.at(\"document.type\", \"news\"),\n//     { orderings: \"[news.sequence desc]\" }\n//   );\n//   if (response) {\n//     return { news: response.results };\n//   } else return {};\n// };\n// export default Index;","map":{"version":3,"sources":["/Users/steph/Projects/07_prismic/ma-next/pages/index.js"],"names":["PrismicConfig","Prismic","Link","Head","Layout","siteTitle","utilStyles","getSortedPostsData","Date","Home","allPostsData","headingMd","padding1px","headingLg","list","map","id","date","title","listItem","lightText","getStaticProps","props"],"mappings":";;;AAAA;AACA;AACA,OAAOA,aAAP,MAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AAEA,eAAe,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAgC;AAC7C,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQL,SAAR,CADF,CADF,EAIE;AAAS,IAAA,SAAS,EAAEC,UAAU,CAACK,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFACqE,GADrE,EAEE;AAAG,IAAA,IAAI,EAAC,0BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,OAFF,CAJF,EAWE;AAAS,IAAA,SAAS,EAAG,GAAEL,UAAU,CAACK,SAAU,IAAGL,UAAU,CAACM,UAAW,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEN,UAAU,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAEP,UAAU,CAACQ,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,YAAY,CAACK,GAAb,CAAiB,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,IAAN;AAAYC,IAAAA;AAAZ,GAAD,KAChB;AAAI,IAAA,SAAS,EAAEZ,UAAU,CAACa,QAA1B;AAAoC,IAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,gBAAX;AAA4B,IAAA,EAAE,EAAG,aAAYA,EAAG,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,KAAJ,CADF,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,EAKA;AAAO,IAAA,SAAS,EAAEZ,UAAU,CAACc,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALA,CADD,CADH,CAFF,CAXF,CADF;AA8BD;AAED,OAAO,eAAeI,cAAf,GAAgC;AACrC,QAAMX,YAAY,GAAGH,kBAAkB,EAAvC;AACA,SAAO;AACLe,IAAAA,KAAK,EAAE;AACLZ,MAAAA;AADK;AADF,GAAP;AAKD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import News from \"../components/News\";\n// import Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { getSortedPostsData } from '../lib/posts';\nimport Date from '../components/date'\n\nexport default function Home({ allPostsData }) {\n  return (\n    <Layout home>\n      <Head>\n        <title>{siteTitle}</title>\n      </Head>\n      <section className={utilStyles.headingMd}>\n        <p>Hello there, this is a sample site</p>\n        <p>\n          (This is a sample website - youâ€™ll be building a site like this on{' '}\n          <a href=\"https://nextjs.org/learn\">our Next.js tutorial</a>.)\n        </p>\n      </section>\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <h2 className={utilStyles.headingLg}>Blog</h2>\n        <ul className={utilStyles.list}>\n          {allPostsData.map(({ id, date, title }) => (\n            <li className={utilStyles.listItem} key={id}>\n            <Link href=\"/projects/[id]\" as={`/projects/${id}`}>\n              <a>{title}</a>\n            </Link>\n            <br />\n            <small className={utilStyles.lightText}>\n              <Date dateString={date} />\n            </small>\n          </li>\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\n\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\n\n// if you need to get data on every request\n// export async function getServerSideProps(context) {\n//   return {\n//     props: {\n//       // props for your component\n//     }\n//   }\n// }\n\n\n\n\n\n// Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\n// const Index = props => (\n//   <Layout>\n//     <h1>Top Notices</h1>\n//     <div>\n//       <News news={props.news} />\n//     </div>\n//     <style jsx>\n//       {`\n//         h1 {\n//           text-decoration: underline;\n//         }\n//       `}\n//     </style>\n//   </Layout>\n// );\n\n// Index.getInitialProps = async function(context) {\n//   let api = await Prismic.api(PrismicConfig.apiEndpoint);\n//   let response = await api.query(\n//     Prismic.Predicates.at(\"document.type\", \"news\"),\n//     { orderings: \"[news.sequence desc]\" }\n//   );\n//   if (response) {\n//     return { news: response.results };\n//   } else return {};\n// };\n\n// export default Index;\n\n"]},"metadata":{},"sourceType":"module"}