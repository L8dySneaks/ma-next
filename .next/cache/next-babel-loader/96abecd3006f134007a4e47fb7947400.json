{"ast":null,"code":"var _jsxFileName = \"/Users/steph/Projects/07_prismic/ma-next/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport News from \"../components/News\";\nimport Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Projects from './projects/projects'; // Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\nconst Index = props => __jsx(Projects, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }\n}, \"Read \", __jsx(Link, {\n  href: \"projects/projects\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }\n}, __jsx(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 44\n  }\n}, \"Projects\")))) // <Layout>\n//   <h1>Top Notices</h1>\n//   <div>\n//     <News news={props.news} />\n//   </div>\n//   <style jsx>\n//     {`\n//       h1 {\n//         text-decoration: underline;\n//       }\n//     `}\n//   </style>\n// </Layout>\n;\n\nIndex.getInitialProps = async function (context) {\n  let api = await Prismic.api(PrismicConfig.apiEndpoint);\n  let response = await api.query(Prismic.Predicates.at(\"document.type\", \"news\"), {\n    orderings: \"[news.sequence desc]\"\n  });\n\n  if (response) {\n    return {\n      news: response.results\n    };\n  } else return {};\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/steph/Projects/07_prismic/ma-next/pages/index.js"],"names":["News","Layout","PrismicConfig","Prismic","Link","Projects","Index","props","getInitialProps","context","api","apiEndpoint","response","query","Predicates","at","orderings","news","results"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;AACA;AACA;;AAEA,MAAMC,KAAK,GAAGC,KAAK,IACjB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAQ,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA/B,CAAR,CADF,CADiB,CAKjB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBF;;AAqBAD,KAAK,CAACE,eAAN,GAAwB,gBAAeC,OAAf,EAAwB;AAC9C,MAAIC,GAAG,GAAG,MAAMP,OAAO,CAACO,GAAR,CAAYR,aAAa,CAACS,WAA1B,CAAhB;AACA,MAAIC,QAAQ,GAAG,MAAMF,GAAG,CAACG,KAAJ,CACnBV,OAAO,CAACW,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADmB,EAEnB;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAFmB,CAArB;;AAIA,MAAIJ,QAAJ,EAAc;AACZ,WAAO;AAAEK,MAAAA,IAAI,EAAEL,QAAQ,CAACM;AAAjB,KAAP;AACD,GAFD,MAEO,OAAO,EAAP;AACR,CATD;;AAWA,eAAeZ,KAAf","sourcesContent":["import News from \"../components/News\";\nimport Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Projects from './projects/projects';\n// Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\nconst Index = props => (\n  <Projects>\n    <p>Read <Link href=\"projects/projects\"><a>Projects</a></Link></p>\n  </Projects>\n  \n  // <Layout>\n  //   <h1>Top Notices</h1>\n    \n  //   <div>\n  //     <News news={props.news} />\n  //   </div>\n  //   <style jsx>\n  //     {`\n  //       h1 {\n  //         text-decoration: underline;\n  //       }\n  //     `}\n  //   </style>\n  // </Layout>\n);\n\nIndex.getInitialProps = async function(context) {\n  let api = await Prismic.api(PrismicConfig.apiEndpoint);\n  let response = await api.query(\n    Prismic.Predicates.at(\"document.type\", \"news\"),\n    { orderings: \"[news.sequence desc]\" }\n  );\n  if (response) {\n    return { news: response.results };\n  } else return {};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}