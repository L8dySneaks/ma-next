{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/steph/Projects/07_prismic/ma-next/pages/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport News from \"../components/News\";\nimport Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Projects from './projects/projects'; // Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\nvar Index = function Index(props) {\n  return __jsx(Projects, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 3\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \"Read \", __jsx(Link, {\n    href: \"projects/projects\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }\n  }, \"Projects\")))) // <Layout>\n  //   <>\n  //   <h1>Top Notices</h1>\n  //   <div>\n  //     <News news={props.news} />\n  //   </div>\n  //   <style jsx>\n  //     {`\n  //       h1 {\n  //         text-decoration: underline;\n  //       }\n  //     `}\n  //   </style>\n  //   </>\n  // </Layout>\n  ;\n};\n\n_c = Index;\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var api, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Prismic.api(PrismicConfig.apiEndpoint);\n\n          case 2:\n            api = _context.sent;\n            _context.next = 5;\n            return api.query(Prismic.Predicates.at(\"document.type\", \"news\"), {\n              orderings: \"[news.sequence desc]\"\n            });\n\n          case 5:\n            response = _context.sent;\n\n            if (!response) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              news: response.results\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", {});\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/steph/Projects/07_prismic/ma-next/pages/index.js"],"names":["News","Layout","PrismicConfig","Prismic","Link","Projects","Index","props","getInitialProps","context","api","apiEndpoint","query","Predicates","at","orderings","response","news","results"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB,C,CACA;AACA;AACA;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAEjB,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAQ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA/B,CAAR,CADF,CAFiB,CAOjB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBiB;AAAA,CAAnB;;KAAMD,K;;AA0BNA,KAAK,CAACE,eAAN;AAAA,sEAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNN,OAAO,CAACO,GAAR,CAAYR,aAAa,CAACS,WAA1B,CADM;;AAAA;AAClBD,YAAAA,GADkB;AAAA;AAAA,mBAEDA,GAAG,CAACE,KAAJ,CACnBT,OAAO,CAACU,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADmB,EAEnB;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAFmB,CAFC;;AAAA;AAElBC,YAAAA,QAFkB;;AAAA,iBAMlBA,QANkB;AAAA;AAAA;AAAA;;AAAA,6CAOb;AAAEC,cAAAA,IAAI,EAAED,QAAQ,CAACE;AAAjB,aAPa;;AAAA;AAAA,6CAQR,EARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeZ,KAAf","sourcesContent":["import News from \"../components/News\";\nimport Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link';\nimport Projects from './projects/projects';\n// Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\nconst Index = props => (\n\n  <Projects>\n    <p>Read <Link href=\"projects/projects\"><a>Projects</a></Link></p>\n  </Projects>\n  \n  \n  // <Layout>\n  //   <>\n  //   <h1>Top Notices</h1>\n    \n  //   <div>\n  //     <News news={props.news} />\n  //   </div>\n  //   <style jsx>\n  //     {`\n  //       h1 {\n  //         text-decoration: underline;\n  //       }\n  //     `}\n  //   </style>\n  //   </>\n  // </Layout>\n  \n);\n\nIndex.getInitialProps = async function(context) {\n  let api = await Prismic.api(PrismicConfig.apiEndpoint);\n  let response = await api.query(\n    Prismic.Predicates.at(\"document.type\", \"news\"),\n    { orderings: \"[news.sequence desc]\" }\n  );\n  if (response) {\n    return { news: response.results };\n  } else return {};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}