{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// import News from \"../components/News\";\n// import Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link'; // Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n// const Index = props => (\n//   <Layout>\n//     <h1>Top Notices</h1>\n//     <div>\n//       <News news={props.news} />\n//     </div>\n//     <style jsx>\n//       {`\n//         h1 {\n//           text-decoration: underline;\n//         }\n//       `}\n//     </style>\n//   </Layout>\n// );\n\nIndex.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var api, response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return Prismic.api(PrismicConfig.apiEndpoint);\n\n          case 2:\n            api = _context.sent;\n            _context.next = 5;\n            return api.query(Prismic.Predicates.at(\"document.type\", \"news\"), {\n              orderings: \"[news.sequence desc]\"\n            });\n\n          case 5:\n            response = _context.sent;\n\n            if (!response) {\n              _context.next = 10;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              news: response.results\n            });\n\n          case 10:\n            return _context.abrupt(\"return\", {});\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Index;","map":{"version":3,"sources":["/Users/steph/Projects/07_prismic/ma-next/pages/index.js"],"names":["PrismicConfig","Prismic","Link","Index","getInitialProps","context","api","apiEndpoint","query","Predicates","at","orderings","response","news","results"],"mappings":";;AAAA;AACA;AACA,OAAOA,aAAP,MAA0B,0BAA1B;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,KAAK,CAACC,eAAN;AAAA,sEAAwB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACNJ,OAAO,CAACK,GAAR,CAAYN,aAAa,CAACO,WAA1B,CADM;;AAAA;AAClBD,YAAAA,GADkB;AAAA;AAAA,mBAEDA,GAAG,CAACE,KAAJ,CACnBP,OAAO,CAACQ,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,MAAvC,CADmB,EAEnB;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAFmB,CAFC;;AAAA;AAElBC,YAAAA,QAFkB;;AAAA,iBAMlBA,QANkB;AAAA;AAAA;AAAA;;AAAA,6CAOb;AAAEC,cAAAA,IAAI,EAAED,QAAQ,CAACE;AAAjB,aAPa;;AAAA;AAAA,6CAQR,EARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeX,KAAf","sourcesContent":["// import News from \"../components/News\";\n// import Layout from \"../components/Layout\";\nimport PrismicConfig from \"../prismic-configuration\";\nimport Prismic from \"prismic-javascript\";\nimport Link from 'next/link'\n\n// Homepage\n// TODO: Add preloader on this page\n// TODO: Glitch effect with countdown\n\n// const Index = props => (\n//   <Layout>\n//     <h1>Top Notices</h1>\n//     <div>\n//       <News news={props.news} />\n//     </div>\n//     <style jsx>\n//       {`\n//         h1 {\n//           text-decoration: underline;\n//         }\n//       `}\n//     </style>\n//   </Layout>\n// );\n\nIndex.getInitialProps = async function(context) {\n  let api = await Prismic.api(PrismicConfig.apiEndpoint);\n  let response = await api.query(\n    Prismic.Predicates.at(\"document.type\", \"news\"),\n    { orderings: \"[news.sequence desc]\" }\n  );\n  if (response) {\n    return { news: response.results };\n  } else return {};\n};\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}